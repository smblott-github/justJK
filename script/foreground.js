// Generated by CoffeeScript 1.4.0
(function() {
  var evaluateXPath, factor, highlight, lookupSite, navigate, onKeypress, previous, sites, smoothScroll, start, testRexExp, timer, xPath;

  evaluateXPath = function(xPath, node) {
    var namespaceResolver, nodes, resultType, xpathResult;
    if (node == null) {
      node = document;
    }
    resultType = XPathResult.ANY_TYPE;
    namespaceResolver = function(namespace) {
      if (namespace === "xhtml") {
        return "http://www.w3.org/1999/xhtml";
      } else {
        return null;
      }
    };
    xpathResult = document.evaluate(xPath, node, namespaceResolver, resultType, null);
    nodes = [];
    if (xpathResult) {
      node = xpathResult.iterateNext();
      while (node) {
        nodes.push(node);
        node = xpathResult.iterateNext();
      }
    }
    return nodes;
  };

  timer = null;

  start = null;

  factor = null;

  smoothScroll = function(element) {
    var delta, duration, offset, target;
    target = element.offsetTop;
    offset = window.pageYOffset;
    delta = target - offset;
    duration = 300;
    start = Date.now();
    factor = 0;
    if (timer) {
      clearInterval(timer);
    }
    timer = setInterval(function() {
      var y;
      factor = (Date.now() - start) / duration;
      if (factor >= 1) {
        clearInterval(timer);
        factor = 1;
      }
      y = factor * delta + offset;
      return window.scrollBy(0, y - window.pageYOffset);
    });
    return 10;
  };

  previous = null;

  highlight = function(node) {
    if (previous !== null) {
      previous.classList.remove("smblott_highlighted");
    }
    previous = node;
    node.classList.add("smblott_highlighted");
    return smoothScroll(node);
  };

  navigate = function(xPath, mover) {
    var index, n, nodes, _i, _results;
    nodes = evaluateXPath(xPath);
    n = nodes.length;
    if (0 < n) {
      index = (function() {
        _results = [];
        for (var _i = 0; 0 <= n ? _i < n : _i > n; 0 <= n ? _i++ : _i--){ _results.push(_i); }
        return _results;
      }).apply(this).filter(function(i) {
        return previous !== null && nodes[i] === previous;
      });
      if (index.length === 0) {
        return highlight(nodes[0]);
      } else {
        return highlight(nodes[mover(index[0], n)]);
      }
    }
  };

  onKeypress = function(xPath) {
    return function(event) {
      if (document.activeElement.nodeName === "BODY") {
        console.log(String.fromCharCode(event.charCode));
        switch (String.fromCharCode(event.charCode)) {
          case "j":
            return navigate(xPath, function(i, n) {
              return Math.min(i + 1, n - 1);
            });
          case "k":
            return navigate(xPath, function(i, n) {
              return Math.max(i - 1, 0);
            });
          case "z":
            return navigate(xPath, function(i, n) {
              return 0;
            });
        }
      }
    };
  };

  testRexExp = function(re, str) {
    return (new RegExp(re)).test(str);
  };

  sites = {
    "www.facebook.com": [
      {
        pathname: ".*",
        xPath: "//div[@id='contentArea']//li[contains(@class,'uiUnifiedStory')]"
      }
    ],
    "www.boards.ie": [
      {
        pathname: "^/vbulletin/forumdisplay.php\?",
        xPath: "//tbody/tr/td[contains(@id,'td_threadtitle')]"
      }
    ]
  };

  lookupSite = function(host, pathname) {
    var area, _i, _len, _ref;
    if (host in sites) {
      _ref = sites[host];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        area = _ref[_i];
        if (testRexExp(area.pathname, pathname)) {
          return area.xPath;
        }
      }
    }
  };

  xPath = lookupSite(window.location.host, window.location.pathname);

  if (xPath) {
    document.addEventListener("keypress", onKeypress(xPath), true);
  }

}).call(this);
