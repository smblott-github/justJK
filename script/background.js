// Generated by CoffeeScript 1.4.0
(function() {
  var debug, host, lookupSite, page, pathname, site, siteBuild, siteList, sites, xPath, _i, _j, _len, _len1, _ref;

  debug = false;

  siteList = "www.facebook.com .*                           //div[@id='contentArea']//li[contains(@class,'uiUnifiedStory')]\nwww.boards.ie    ^/vbulletin/forumdisplay.php //tbody/tr/td[contains(@id,'td_threadtitle')]";

  siteBuild = siteList.split("\n");

  siteBuild = siteBuild.map(function(s) {
    return s.trim();
  });

  siteBuild = siteBuild.map(function(s) {
    return s.split(/\s+/);
  });

  siteBuild = siteBuild.filter(function(s) {
    return s.length === 3;
  });

  sites = {};

  for (_i = 0, _len = siteBuild.length; _i < _len; _i++) {
    site = siteBuild[_i];
    host = site[0], pathname = site[1], xPath = site[2];
    sites[host] || (sites[host] = []);
    sites[host].push({
      pathname: pathname,
      xPath: xPath
    });
  }

  for (site in sites) {
    _ref = sites[site];
    for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
      page = _ref[_j];
      if (page.pathname) {
        page.regexp = new RegExp(page.pathname);
      }
    }
  }

  lookupSite = function(host, pathname) {
    var _k, _len2, _ref1;
    if ((host != null) && (pathname != null)) {
      if (host in sites) {
        _ref1 = sites[host];
        for (_k = 0, _len2 = _ref1.length; _k < _len2; _k++) {
          page = _ref1[_k];
          if (page.regexp && page.regexp.test(pathname)) {
            if (debug) {
              console.log("" + host + " " + pathname + " " + page.xPath);
            }
            return page.xPath;
          }
        }
      }
    }
    return null;
  };

  chrome.extension.onMessage.addListener(function(request, sender, callback) {
    var response;
    response = {
      xPath: lookupSite(request != null ? request.host : void 0, request != null ? request.pathname : void 0)
    };
    return callback(response);
  });

}).call(this);
